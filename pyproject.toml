[tool.poetry]
name = "mednlpix"
version = "0.1.0"
description = "MedNLPix â€” Modular Medical NLP Pipeline for classifying clinical reports using Machine Learning, Deep Learning, and Clean Architecture principles."
authors = ["Rostand Surel <rostand.surel@yahoo.com>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "mednlpix", from = "src" }
    ]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

# --- Core scientific stack ---
pandas = "^2.2.3"
numpy = "1.26.4"
scipy = "1.13.1"
scikit-learn = "^1.5.2"
pydantic = "^2.9.2"
joblib = "^1.4.2"
pyyaml = "^6.0.2"

# --- Visualization & analysis ---
matplotlib = "^3.9.2"
seaborn = "^0.13.2"
plotly = "^5.24.1"

# --- Web apps & API ---
streamlit = "^1.38.0"
fastapi = "^0.115.0"
uvicorn = "^0.34.0"

# --- CLI & utilities ---
typer = "^0.12.5"
nltk = "^3.9.2"
spacy = "^3.8.7"
gensim = "4.3.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^6.0.0"
black = "^24.10.0"
ruff = "^0.6.9"
mypy = "^1.11.2"
pre-commit = "^4.0.1"

[tool.poetry.scripts]
mednlpix = "mednlpix.cli:app"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

# --- Tooling configurations ---
[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
select = ["E", "F", "B", "I", "UP", "SIM"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict = true
